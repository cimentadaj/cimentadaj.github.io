{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"devtools::install_github(\"cimentadaj/coauthornetwork\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"install_remotes(remotes, auth_token = auth_token, host = host, \n    dependencies = dependencies, upgrade = upgrade, force = force, \n    quiet = quiet, build = build, build_opts = build_opts, repos = repos, \n    type = type, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"vapply(remotes, install_remote, ..., FUN.VALUE = character(1))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"FUN(X[[i]], ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"install(source, dependencies = dependencies, upgrade = upgrade, \n    force = force, quiet = quiet, build = build, build_opts = build_opts, \n    repos = repos, type = type, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"install_deps(pkgdir, dependencies = dependencies, quiet = quiet, \n    build = build, build_opts = build_opts, upgrade = upgrade, \n    repos = repos, type = type, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"update(packages, dependencies = dep_deps, quiet = quiet, upgrade = upgrade, \n    build = build, build_opts = build_opts, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"update.package_deps(packages, dependencies = dep_deps, quiet = quiet, \n    upgrade = upgrade, build = build, build_opts = build_opts, \n    ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"install_remotes(object$remote[!object$is_cran & behind], dependencies = dependencies, \n    upgrade = upgrade, force = force, quiet = quiet, build = build, \n    build_opts = build_opts, repos = repos, type = type, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"vapply(remotes, install_remote, ..., FUN.VALUE = character(1))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"FUN(X[[i]], ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"install(source, dependencies = dependencies, upgrade = upgrade, \n    force = force, quiet = quiet, build = build, build_opts = build_opts, \n    repos = repos, type = type, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"install_deps(pkgdir, dependencies = dependencies, quiet = quiet, \n    build = build, build_opts = build_opts, upgrade = upgrade, \n    repos = repos, type = type, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"update(packages, dependencies = dep_deps, quiet = quiet, upgrade = upgrade, \n    build = build, build_opts = build_opts, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"update.package_deps(packages, dependencies = dep_deps, quiet = quiet, \n    upgrade = upgrade, build = build, build_opts = build_opts, \n    ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"install_remotes(object$remote[!object$is_cran & behind], dependencies = dependencies, \n    upgrade = upgrade, force = force, quiet = quiet, build = build, \n    build_opts = build_opts, repos = repos, type = type, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"vapply(remotes, install_remote, ..., FUN.VALUE = character(1))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"FUN(X[[i]], ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"install(source, dependencies = dependencies, upgrade = upgrade, \n    force = force, quiet = quiet, build = build, build_opts = build_opts, \n    repos = repos, type = type, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"safe_build_package(pkgdir, build_opts, dir, quiet)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"pkgbuild::build(pkgdir, dest_path = dest_path, binary = FALSE, \n    vignettes = vignettes, manual = manual, args = build_opts, \n    quiet = quiet)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withr::with_temp_libpaths(rcmd_build_tools(options$cmd, c(options$path, \n    options$args), wd = options$out_dir, fail_on_status = TRUE, \n    required = FALSE, quiet = quiet))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"force(code)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"rcmd_build_tools(options$cmd, c(options$path, options$args), \n    wd = options$out_dir, fail_on_status = TRUE, required = FALSE, \n    quiet = quiet)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"with_build_tools(callr::rcmd_safe(..., env = env, spinner = FALSE, \n    show = FALSE, echo = FALSE, block_callback = block_callback(quiet)), \n    required = required)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withr::with_path(rtools_path(), code)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"force(code)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"callr::rcmd_safe(..., env = env, spinner = FALSE, show = FALSE, \n    echo = FALSE, block_callback = block_callback(quiet))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"run_r(options)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"with(options, with_envvar(env, run(bin, args = real_cmdargs, \n    stdout_line_callback = real_callback(stdout), stderr_line_callback = real_callback(stderr), \n    stdout_callback = real_block_callback, stderr_callback = real_block_callback, \n    echo_cmd = echo, echo = show, spinner = spinner, error_on_status = fail_on_status,  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"with.default(options, with_envvar(env, run(bin, args = real_cmdargs, \n    stdout_line_callback = real_callback(stdout), stderr_line_callback = real_callback(stderr), \n    stdout_callback = real_block_callback, stderr_callback = real_block_callback, \n    echo_cmd = echo, echo = show, spinner = spinner, error_on_status = fail_on_status,  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(substitute(expr), data, enclos = parent.frame())","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(substitute(expr), data, enclos = parent.frame())","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"with_envvar(env, run(bin, args = real_cmdargs, stdout_line_callback = real_callback(stdout), \n    stderr_line_callback = real_callback(stderr), stdout_callback = real_block_callback, \n    stderr_callback = real_block_callback, echo_cmd = echo, echo = show, \n    spinner = spinner, error_on_status = fail_on_status, timeout = timeout))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"force(code)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"run(bin, args = real_cmdargs, stdout_line_callback = real_callback(stdout), \n    stderr_line_callback = real_callback(stderr), stdout_callback = real_block_callback, \n    stderr_callback = real_block_callback, echo_cmd = echo, echo = show, \n    spinner = spinner, error_on_status = fail_on_status, timeout = timeout)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(make_condition(res, call = sys.call()))","line_number":0}],"message":"Error in run(bin, args = real_cmdargs, stdout_line_callback = real_callback(stdout),  : \n  System command error\n"}