tinytex::
library(dplyr)
library(dplyr)
library(dplyr)
devtools::check()
remotes::install_github("cimentadaj/opendataes")
kw <- explorar_keywords('elecciones', pb_code)
library(opendataes)
pb_code <- publishers_available$publisher_code
kw <- explorar_keywords('elecciones', pb_code)
devtools::test()
33.99 + 33.77
33.99 + 33.77 + 30
nzchart
nzchar
nzchar(c('', 'HEY'))
?chartr
sQuote(c('', 'HEY'))
dQuote(c('', 'HEY'))
?strtrim
strtrim(c("abcdef", "abcdef", "abcdef"), c(1,5,10))
strtrim(c("abcdef", "abcdef", "abcdef"), 3)
chartr("H", "1", "HEY")
chartr("HEY", "1", "HEY")
chartr("HEY", "111", "HEY")
abbreviate("HEY", 2)
abbreviate("HEY", 1)
strtrim("HEY", 1)
strtrim("HEY", 3)
strtrim("HEY", 5)
# catch "local" arg passed from blogdown::build_site()
local <- commandArgs(TRUE)[1] == "TRUE"
# set common options ofr knitr
knitr::opts_knit$set(
base.dir = normalizePath("static/", mustWork = TRUE),
base.url = "/"
)
knitr::opts_chunk$set(
cache.path = normalizePath("cache/", mustWork = TRUE),
collapse = TRUE,
comment  = "#>"
)
# list up Rmd files
Rmd_files <- list.files("content", "\\.Rmd$", recursive = TRUE, full.names = TRUE)
Rmd_files <- list.files("content", "\\.Rmd$", recursive = TRUE, full.names = TRUE)
md_files  <- sub("\\.Rmd$", ".md", Rmd_files)
names(md_files) <- Rmd_files
needs_knitted <- !file.exists(md_files) | utils::file_test("-ot", md_files, Rmd_files)
message("skip: \n    ", paste(Rmd_files[!needs_knitted], collapse = "\n    "))
md_files
getwd()
setwd("~/Downloads/repositories/cimentadaj.github.io")
# list up Rmd files
Rmd_files <- list.files("content", "\\.Rmd$", recursive = TRUE, full.names = TRUE)
# list up md files
md_files  <- sub("\\.Rmd$", ".md", Rmd_files)
names(md_files) <- Rmd_files
md_files
needs_knitted <- !file.exists(md_files) | utils::file_test("-ot", md_files, Rmd_files)
needs_knitted
message("skip: \n    ", paste(Rmd_files[!needs_knitted], collapse = "\n    "))
file.exists(md_files)
Rmd_files <- list.files("content", "\\.Rmd$", recursive = TRUE, full.names = TRUE)
Rmd_files
md_files  <- sub("\\.Rmd$", ".md", Rmd_files)
md_files
# list up md files
html_files  <- sub("\\.Rmd$", "html", Rmd_files)
names(html_files) <- Rmd_files
html_files
# list up md files
html_files  <- sub("\\.Rmd$", ".html", Rmd_files)
names(html_files) <- Rmd_files
html_files
# knit it when:
#   1) the correspondent md file does not exist yet
#   2) the Rmd file was updated after the last time md file had been generated
needs_knitted <- !file.exists(md_files) | utils::file_test("-ot", md_files, Rmd_files)
message("skip: \n    ", paste(Rmd_files[!needs_knitted], collapse = "\n    "))
file.exists(md_files)
!file.exists(html_files) | utils::file_test("-ot", html_files, Rmd_files)
needs_knitted <- !file.exists(html_files) | utils::file_test("-ot", html_files, Rmd_files)
needs_knitted
needs_knitted <- !file.exists(html_files) | utils::file_test("-ot", html_files, Rmd_files)
message("skip: \n    ", paste(Rmd_files[!needs_knitted], collapse = "\n    "))
for (rmd in Rmd_files[needs_knitted]) {
base_name <- tools::file_path_sans_ext(basename(rmd))
knitr::opts_chunk$set(
fig.path = glue::glue("blog/{base_name}_files/figure-html/")
)
set.seed(1984)
knitr::knit(input = rmd, output = md_files[rmd], encoding = "UTF-8")
}
blogdown::hugo_build(local = local)
blogdown::hugo_build(local = TRUE)
blogdown::hugo_build
blogdown::hugo_build
blogdown::build_site
?blogdown::build_site
blogdown::serve_site
blogdown:::generator()
blogdown:::generator()
blogdown:::generator()
blogdown:::generator()
blogdown:::serve_it
blogdown:::serve_it()
blogdown:::serve_it()
blogdown::serve_site
?blogdown::serve_site
blogdown::serve_site(); blogdown::stop_server()
