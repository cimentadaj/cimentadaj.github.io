ggplot(aes(hour, n, colour = day)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n, fill = day)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n, fill = day)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n, fill = day)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour)
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n)) +
geom_col() +
facet_wrap(~ day, ncol = 3)
bicing %>%
filter(bikes == 0)
bicing %>% filter(bikes == 0) %>%
mutate(hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
bicing %>% filter(bikes == 0) %>%
mutate(hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
mutate(empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
empty_bicycle
empty_bicycle %>% filter(empty == 0)
empty_bicycle %>% filter(empty == 1)
empty_bicycle %>% filter(empty == 1) %>% count(slots)
empty_bicycle
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
library(caret)
?createDataPartition
createDataPartition(empty_bicycle$empty, 2, p = 0.8)
createDataPartition(empty_bicycle$empty, 1, p = 0.8)
length(createDataPartition(empty_bicycle$empty, 1, p = 0.8))
length(createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]])
length(empty_bicycle)
createDataPartition(empty_bicycle$empty, 1, p = 0.8)
createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
test
count(test, empty)
count(training, empty)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
empty_bicycle
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0)) %>%
select(-(1:4))
empty_bicycle
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
glm(empty ~ ., data = empty_bicycle)
mod1 <- glm(empty ~ ., data = training)
mod1
arm::display(mod1)
mod1 <- glm(empty ~ ., data = training, family = "binomial")
mod1
summary(mod1)
arm::display(mod1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = as.character(lubridate::wday(time)),
weekend = ifelse(between(day, 6, 7), 1, 0)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0),
day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ ., data = training, family = "binomial")
arm::display(mod1)
mod1 <- glm(empty ~ . + hour:day, data = training, family = "binomial")
arm::display(mod1)
predict(mod1, newdata = test)
predict(mod1, newdata = test, type = 'response')
hist(predict(mod1, newdata = test, type = 'response'))
pred1 <- predict(mod1, newdata = test, type = 'response')
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
morning = ifelse(time <= 10, 1, 0),
weekend = ifelse(between(lubridate::wday(day), 6, 7), 1, 0))
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
morning = ifelse(time <= 10, 1, 0),
weekend = ifelse(between(lubridate::wday(day), 6, 7), 1, 0))
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
morning = ifelse(time <= 10, 1, 0),
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0))
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
morning = ifelse(time <= 10, 1, 0),
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ . + morning*weekend, data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
pred1
hist(pred1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0),
day = as.character(day)) %>%
select(-(1:4))
empty_bicycle
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ . + hour:day, data = training, family = "binomial")
mod1
pred1 <- predict(mod1, newdata = test, type = 'response')
class(mod1)
VIF::vif(mod1)
mod1 <- glm(empty ~ . + hour:day, data = training, family = "binomial")
VIF::vif(mod1)
car::vif(mod1)
VIF::vif()
?VIF::vif()
?vif
car::vif(mod1)
mod1
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
# morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time)) %>%
# weekend = ifelse(between(day, 6, 7), 1, 0),
# day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ . + hour:day, data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
arm::display(mod1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
# morning = ifelse(time <= 10, 1, 0),
# day = lubridate::wday(time))
weekend = ifelse(between(day, 6, 7), 1, 0)) %>%
# day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
# morning = ifelse(time <= 10, 1, 0),
# day = lubridate::wday(time))
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0)) %>%
# day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ . + hour:day, data = training, family = "binomial")
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
arm::display(pred1)
arm::display(mod1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = as.character(lubridate::hour(time)),
# morning = ifelse(time <= 10, 1, 0),
# day = lubridate::wday(time))
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0)) %>%
# day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
arm::display(mod1)
hist(pred1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = as.character(lubridate::hour(time)),
morning = ifelse(time <= 10, 1, 0),
# day = lubridate::wday(time))
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0)) %>%
# day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
hist(pred1)
day = as.character(day)) %>%
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
day = as.character(day)) %>%
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = as.character(lubridate::hour(time)),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0),
day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
display::arm(mod1)
arm::display(mod1)
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = as.character(lubridate::hour(time)),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0),
day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
hist(pred1)
mod1 <- glm(empty ~ . day:hour, data = training, family = "binomial")
mod1 <- glm(empty ~ ., day:hour, data = training, family = "binomial")
mod1 <- glm(empty ~ . + day:hour, data = training, family = "binomial")
mod1 <- glm(empty ~ . + day:hour, data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
hist(pred1)
car::vif(mod1)
?car::vif(mod1)
summary(mod1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = as.character(lubridate::hour(time)),
# morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
# weekend = ifelse(between(day, 6, 7), 1, 0),
day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ . + day:hour, data = training, family = "binomial")
mod1 <- glm(empty ~ . + day:hour, data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
hist(pred1)
summary(mod1)
rbinom(1, prob = pred1)
?confusionMatrix()
?rbinom
rbinom(length(pred1), 1, prob = pred1)
pred_empty <- rbinom(length(pred1), 1, prob = pred1)
confusionMatrix(test$empty, pred_empty)
?confusionMatrix
181 / (563 + 181)
confusionMatrix(test$empty, pred_empty, positive = 1)
confusionMatrix(test$empty, pred_empty, positive = "1")
confusionMatrix(test$empty, pred_empty, positive = "0")
confusionMatrix(test$empty, pred_empty, reference = "1")
confusionMatrix(test$empty, pred_empty, positive = "1")
cimentadaj::my_new_post("ess 0.1.1 is out!")
blogdown::find_tags
blogdown::find_yaml(field = 'tags')
?blogdown::find_yaml
blogdown::count_yaml()
clean_df <-
ess_rounds(1, "cimentadaj@gmail.com") %>%
remove_missing()
library(tidyverse)
library(ess)
clean_df <-
ess_rounds(1, "cimentadaj@gmail.com") %>%
remove_missing()
install.packages(ess)
install.packages("ess")
install.packages("ess")
clean_df <-
ess_rounds(1, "cimentadaj@gmail.com") %>%
remove_missing()
library(tidyverse)
library(ess)
clean_df <-
ess_rounds(1, "cimentadaj@gmail.com") %>%
remove_missing()
clean_df <-
ess_rounds(1, "your_email@gmail.com") %>%
recode_missings()
clean_df <-
ess_rounds(1, "cimentadaj@gmail.com") %>%
recode_missings()
recode_strings_missing
recode_numeric_missing
?recode_missings
p <- ess_rounds(1, "cimentadaj@gmail.com") %>%
recode_missings(c("Refusal", "No answer"))
ess::show_themes()
show_rounds_country()
show_rounds_country(2)
map(show_rounds(), ~ show_rounds_country(.x)) %>%
reduce(intersect)
another_clean_df <-
ess_rounds(1, "cimentadaj@gmail.com") %>%
recode_missings(c("Refusal", "No answer"))
another_clean_df$tvtot
another_clean_df <- recode_numeric_missing(another_clean_df$tvtot, "Don't know")
another_clean_df <-
ess_rounds(1, "cimentadaj@gmail.com") %>%
recode_missings(c("Refusal", "No answer"))
another_clean_df$tvtot <-
recode_numeric_missing(
another_clean_df$tvtot,
"Don't know"
)
another_clean_df$tvtot
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
?opts_chunk
blogdown::serve_site()
servr::daemon_stop("4322940224")
blogdown::serve_site()
servr::daemon_stop("4718677824")
system("open .")
blogdown::hugo_build()
servr::daemon_stop("4718677824")
servr::daemon_list()
options(servr.daemon = TRUE, blogdown.author = "John Doe")
?servr::daemon_stop
servr::daemon_stop
install.packages("httpuv")
library(RSelenium)
library(xml2)
library(tidyverse)
the_df <-
as_tibble(set_names(rerun(4, character()),
c("school_name", "complexity", "social_fund", "score_6th")))
remDr <- remoteDriver(remoteServerAddr = "192.168.99.100",
port = 4445L,
browserName = "chrome")
remDr$open()
remDr <- remoteDriver(remoteServerAddr = "192.168.99.100",
port = 4445L,
browserName = "chrome")
remDr$open()
remDr$navigate("https://view-awesome-table.com/-L4lo3r-JA2iaWk1puUT/view")
remDr$screenshot(display = TRUE)
navigate_click <- function() {
webElem <- remDr$findElement(using = "class name",
"google-visualization-table-div-page")
Sys.sleep(0.5)
webElem$clickElement()
remDr$getPageSource()[[1]] %>%
read_xml() %>%
xml_ns_strip() %>%
xml_find_all(xpath = '//td') %>%
xml_text() %>%
set_names(c("school_name", "complexity", "social_fund", "score_6th")) %>%
as.list() %>% as_tibble()
}
blogdown::serve_site()
the_df
remDr <- remoteDriver(remoteServerAddr = "192.168.99.100",
port = 4445L,
browserName = "chrome")
remDr$open()
remDr$navigate("https://view-awesome-table.com/-L4lo3r-JA2iaWk1puUT/view")
navigate_click <- function() {
webElem <- remDr$findElement(using = "class name",
"google-visualization-table-div-page")
Sys.sleep(0.5)
webElem$clickElement()
remDr$getPageSource()[[1]] %>%
read_xml() %>%
xml_ns_strip() %>%
xml_find_all(xpath = '//td') %>%
xml_text() %>%
set_names(c("school_name", "complexity", "social_fund", "score_6th")) %>%
as.list() %>% as_tibble()
}
complete_df <-
map(1:160, ~ navigate_click()) %>%
bind_rows()
the_df
the_df
remDr$navigate("https://view-awesome-table.com/-L4lo3r-JA2iaWk1puUT/view")
webElem <- remDr$findElement(using = "class name",
"google-visualization-table-div-page")
webElem$clickElement()
remDr$getPageSource()[[1]]
remDr$getPageSource()[[1]] %>%
read_xml() %>%
xml_ns_strip() %>%
xml_find_all(xpath = '//td') %>%
xml_text() %>%
set_names(c("school_name", "complexity", "social_fund", "score_6th")) %>%
as.list() %>% as_tibble()
complete_df
blogdown::hugo_build()
blogdown::serve_site()
blogdown::hugo_build()
