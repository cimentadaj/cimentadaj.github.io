geom_col()
intm_df %>%
top_n(10, avg_movement) %>%
unite(hour_day, hour, day)
intm_df %>%
top_n(10, avg_movement) %>%
unite(hour_day, hour, day, sep = "-")
intm_df %>%
top_n(10, avg_movement) %>%
unite(hour_day, hour, day, sep = " - ") %>%
ggplot(aes(hour_day, avg_movement)) +
geom_col()
?geom_ribbon
huron <- data.frame(year = 1875:1972, level = as.vector(LakeHuron))
huron
head(huron)
intm_df %>%
top_n(10, avg_movement) %>%
unite(hour_day, hour, day, sep = " - ") %>%
ggplot(aes(hour_day, avg_movement)) +
geom_ribbon()
intm_df %>%
top_n(10, avg_movement) %>%
unite(hour_day, hour, day, sep = " - ") %>%
ggplot(aes(hour_day, avg_movement)) +
geom_area()
intm_df %>%
top_n(10, avg_movement) %>%
unite(hour_day, hour, day, sep = " - ") %>%
ggplot(aes(hour_day, y = avg_movement)) +
geom_area()
huron <- data.frame(year = as.character(1875:1972), level = as.vector(LakeHuron))
h <- ggplot(huron, aes(year))
h + geom_area(aes(y = level))
huron <- data.frame(year = 1875:1972, level = as.vector(LakeHuron))
h <- ggplot(huron, aes(year))
h + geom_area(aes(y = level))
intm_df
intm_df <-
bicing %>%
mutate(hour = lubridate::hour(time)) %>%
group_by(hour) %>%
mutate(future_bike = lag(bikes)) %>%
summarize(avg_movement = mean(bikes != future_bike, na.rm = TRUE)) %>%
ungroup()
intm_df
intm_df <-
bicing %>%
mutate(hour = lubridate::hour(time),
day = lubridate::wday(time, label = TRUE)) %>%
group_by(hour, day) %>%
mutate(future_bike = lag(bikes)) %>%
summarize(avg_movement = mean(bikes != future_bike, na.rm = TRUE)) %>%
ungroup()
intm_df %>%
top_n(10, avg_movement) %>%
unite(hour_day, hour, day, sep = " - ") %>%
ggplot(aes(hour_day, avg_movement)) +
geom_area()
intm_df %>%
top_n(10, avg_movement) %>%
unite(hour_day, hour, day, sep = " - ") %>%
ggplot(aes(hour_day, avg_movement)) +
geom_col()
intm_df %>%
top_n(10, avg_movement) %>%
unite(hour_day, hour, day, sep = " - ") %>%
ggplot(aes(hour_day, avg_movement)) +
geom_col() +
ylim(c(0, 1))
ls()
bicing %>%
mutate(hour = lubridate::hour(time),
day = lubridate::wday(time, label = TRUE))
bicing %>%
mutate(hour = lubridate::hour(time),
day = lubridate::wday(time, label = TRUE))
bicing %>%
filter(bikes == 0)
bicing %>%
filter(bikes == 0)
bicing %>%
filter(bikes == 0) %>%
count(slots, bikes)
bicing %>%
filter(bikes == 0)
bicing %>%
filter(bikes == 0) %>%
count(lubridate::hour(time))
bicing %>%
filter(bikes == 0) %>%
count(lubridate::hour(time))
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time))
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE))
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour)
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour)
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour)
bicing %>%
filter(bikes == 0)
bicing %>%
filter(bikes == 0) %>%
mutate(bicing %>%
filter(bikes == 0))
bicing %>%
filter(bikes == 0)
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour)
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour)
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n, fill = day)) +
geom_freqpoly()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n, group = day, colour = day)) +
geom_line()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n, colour = day)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n, fill = day)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n, fill = day)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n, fill = day)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n)) +
geom_col()
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour)
bicing %>%
filter(bikes == 0) %>%
count(hour = lubridate::hour(time), day = lubridate::wday(time, label = TRUE)) %>%
arrange(day, hour) %>%
ggplot(aes(hour, n)) +
geom_col() +
facet_wrap(~ day, ncol = 3)
bicing %>%
filter(bikes == 0)
bicing %>% filter(bikes == 0) %>%
mutate(hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
bicing %>% filter(bikes == 0) %>%
mutate(hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
mutate(empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
empty_bicycle
empty_bicycle %>% filter(empty == 0)
empty_bicycle %>% filter(empty == 1)
empty_bicycle %>% filter(empty == 1) %>% count(slots)
empty_bicycle
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
library(caret)
?createDataPartition
createDataPartition(empty_bicycle$empty, 2, p = 0.8)
createDataPartition(empty_bicycle$empty, 1, p = 0.8)
length(createDataPartition(empty_bicycle$empty, 1, p = 0.8))
length(createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]])
length(empty_bicycle)
createDataPartition(empty_bicycle$empty, 1, p = 0.8)
createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
test
count(test, empty)
count(training, empty)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0))
empty_bicycle
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0)) %>%
select(-(1:4))
empty_bicycle
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
glm(empty ~ ., data = empty_bicycle)
mod1 <- glm(empty ~ ., data = training)
mod1
arm::display(mod1)
mod1 <- glm(empty ~ ., data = training, family = "binomial")
mod1
summary(mod1)
arm::display(mod1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = as.character(lubridate::wday(time)),
weekend = ifelse(between(day, 6, 7), 1, 0)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0),
day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ ., data = training, family = "binomial")
arm::display(mod1)
mod1 <- glm(empty ~ . + hour:day, data = training, family = "binomial")
arm::display(mod1)
predict(mod1, newdata = test)
predict(mod1, newdata = test, type = 'response')
hist(predict(mod1, newdata = test, type = 'response'))
pred1 <- predict(mod1, newdata = test, type = 'response')
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
morning = ifelse(time <= 10, 1, 0),
weekend = ifelse(between(lubridate::wday(day), 6, 7), 1, 0))
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
morning = ifelse(time <= 10, 1, 0),
weekend = ifelse(between(lubridate::wday(day), 6, 7), 1, 0))
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
morning = ifelse(time <= 10, 1, 0),
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0))
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
morning = ifelse(time <= 10, 1, 0),
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ . + morning*weekend, data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
pred1
hist(pred1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0),
day = as.character(day)) %>%
select(-(1:4))
empty_bicycle
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ . + hour:day, data = training, family = "binomial")
mod1
pred1 <- predict(mod1, newdata = test, type = 'response')
class(mod1)
VIF::vif(mod1)
mod1 <- glm(empty ~ . + hour:day, data = training, family = "binomial")
VIF::vif(mod1)
car::vif(mod1)
VIF::vif()
?VIF::vif()
?vif
car::vif(mod1)
mod1
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
# morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time)) %>%
# weekend = ifelse(between(day, 6, 7), 1, 0),
# day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ . + hour:day, data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
arm::display(mod1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
# morning = ifelse(time <= 10, 1, 0),
# day = lubridate::wday(time))
weekend = ifelse(between(day, 6, 7), 1, 0)) %>%
# day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = lubridate::hour(time),
# morning = ifelse(time <= 10, 1, 0),
# day = lubridate::wday(time))
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0)) %>%
# day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ . + hour:day, data = training, family = "binomial")
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
arm::display(pred1)
arm::display(mod1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = as.character(lubridate::hour(time)),
# morning = ifelse(time <= 10, 1, 0),
# day = lubridate::wday(time))
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0)) %>%
# day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
arm::display(mod1)
hist(pred1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = as.character(lubridate::hour(time)),
morning = ifelse(time <= 10, 1, 0),
# day = lubridate::wday(time))
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0)) %>%
# day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
hist(pred1)
day = as.character(day)) %>%
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
day = as.character(day)) %>%
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = as.character(lubridate::hour(time)),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(lubridate::wday(time), 6, 7), 1, 0),
day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
display::arm(mod1)
arm::display(mod1)
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = as.character(lubridate::hour(time)),
morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
weekend = ifelse(between(day, 6, 7), 1, 0),
day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ ., data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
hist(pred1)
mod1 <- glm(empty ~ . day:hour, data = training, family = "binomial")
mod1 <- glm(empty ~ ., day:hour, data = training, family = "binomial")
mod1 <- glm(empty ~ . + day:hour, data = training, family = "binomial")
mod1 <- glm(empty ~ . + day:hour, data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
hist(pred1)
car::vif(mod1)
?car::vif(mod1)
summary(mod1)
empty_bicycle <-
mutate(bicing,
empty = ifelse(bikes == 0, 1, 0),
hour = as.character(lubridate::hour(time)),
# morning = ifelse(time <= 10, 1, 0),
day = lubridate::wday(time),
# weekend = ifelse(between(day, 6, 7), 1, 0),
day = as.character(day)) %>%
select(-(1:4))
training_rows <- createDataPartition(empty_bicycle$empty, 1, p = 0.8)[[1]]
training <- empty_bicycle[training_rows, ]
test <- empty_bicycle[-training_rows, ]
mod1 <- glm(empty ~ . + day:hour, data = training, family = "binomial")
mod1 <- glm(empty ~ . + day:hour, data = training, family = "binomial")
pred1 <- predict(mod1, newdata = test, type = 'response')
hist(pred1)
summary(mod1)
rbinom(1, prob = pred1)
?confusionMatrix()
?rbinom
rbinom(length(pred1), 1, prob = pred1)
pred_empty <- rbinom(length(pred1), 1, prob = pred1)
confusionMatrix(test$empty, pred_empty)
?confusionMatrix
181 / (563 + 181)
confusionMatrix(test$empty, pred_empty, positive = 1)
confusionMatrix(test$empty, pred_empty, positive = "1")
confusionMatrix(test$empty, pred_empty, positive = "0")
confusionMatrix(test$empty, pred_empty, reference = "1")
confusionMatrix(test$empty, pred_empty, positive = "1")
